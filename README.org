* yafolding - Yet another folding extension for Emacs
:PROPERTIES:
:CUSTOM_ID: yafolding---yet-another-folding-extension-for-emacs
:END:
[[https://circleci.com/gh/zenozeng/yafolding.el.svg?style=svg]]

Folding code blocks based on indentation.

** ScreenShot
:PROPERTIES:
:CUSTOM_ID: screenshot
:END:
[[https://raw.github.com/zenozeng/yafolding.el/master/psc.png]]

** Config Example
:PROPERTIES:
:CUSTOM_ID: config-example
:END:
*** Default Keymap
:PROPERTIES:
:CUSTOM_ID: default-keymap
:END:
#+begin_src emacs-lisp
(defvar yafolding-mode-map
  (let ((map (make-sparse-keymap)))
    (define-key map (kbd "<C-S-return>") #'yafolding-hide-parent-element)
    (define-key map (kbd "<C-M-return>") #'yafolding-toggle-all)
    (define-key map (kbd "<C-return>") #'yafolding-toggle-element)
    map))
#+end_src

*** Hook into prog-mode-hook
:PROPERTIES:
:CUSTOM_ID: hook-into-prog-mode-hook
:END:
#+begin_src emacs-lisp
(add-hook 'prog-mode-hook
          (lambda () (yafolding-mode)))
#+end_src

*** Modify keybindings
:PROPERTIES:
:CUSTOM_ID: modify-keybindings
:END:
#+begin_example
(require 'yafolding)
(define-key yafolding-mode-map (kbd "<C-S-return>") nil)
(define-key yafolding-mode-map (kbd "<C-M-return>") nil)
(define-key yafolding-mode-map (kbd "<C-return>") nil)
(define-key yafolding-mode-map (kbd "C-c <C-M-return>") 'yafolding-toggle-all)
(define-key yafolding-mode-map (kbd "C-c <C-S-return>") 'yafolding-hide-parent-element)
(define-key yafolding-mode-map (kbd "C-c <C-return>") 'yafolding-toggle-element)
#+end_example

** Known Issue
:PROPERTIES:
:CUSTOM_ID: known-issue
:END:
*** data loss on delete-trailing-whitespace
:PROPERTIES:
:CUSTOM_ID: data-loss-on-delete-trailing-whitespace
:END:
use this instead:

#+begin_src emacs-lisp
(lambda ()
    (yafolding-show-all)
    (delete-trailing-whitespace))
#+end_src

see also: [[https://github.com/zenozeng/yafolding.el/issues/13]]

** Licensing
:PROPERTIES:
:CUSTOM_ID: licensing
:END:
This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program. If not, see [[http://www.gnu.org/licenses/]].

** Debug
:PROPERTIES:
:CUSTOM_ID: debug
:END:
- [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Using-Edebug.html#Using-Edebug][Using
  Edebug]]

** Testing
:PROPERTIES:
:CUSTOM_ID: testing
:END:
For testing, use [[https://github.com/ecukes/ecukes][ecukes]], installed
by [[https://github.com/cask/cask][Cask]]. The tests are in the
[[./features/][features]] subdirectory, test data is in the
[[./test/data][data]] dir.

*** Run tests
:PROPERTIES:
:CUSTOM_ID: run-tests
:END:
#+begin_src sh
cask install
cask exec ecukes --no-win
#+end_src
